<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://sihan-shen.github.io</id>
    <title>Hanss&apos;s Blog</title>
    <updated>2025-06-19T04:02:54.546Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://sihan-shen.github.io"/>
    <link rel="self" href="https://sihan-shen.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://sihan-shen.github.io/images/avatar.png</logo>
    <icon>https://sihan-shen.github.io/favicon.ico</icon>
    <rights>All rights reserved 2025, Hanss&apos;s Blog</rights>
    <entry>
        <title type="html"><![CDATA[如何部署 FRP 内网穿透服务]]></title>
        <id>https://sihan-shen.github.io/post/ru-he-bu-shu-frp-nei-wang-chuan-tou-fu-wu/</id>
        <link href="https://sihan-shen.github.io/post/ru-he-bu-shu-frp-nei-wang-chuan-tou-fu-wu/">
        </link>
        <updated>2025-06-14T13:58:03.000Z</updated>
        <content type="html"><![CDATA[<h1 id="如何部署-frp-内网穿透服务">如何部署 FRP 内网穿透服务</h1>
<p>在当今的网络环境中，内网穿透服务的需求日益增长。FRP（Fast Reverse Proxy）作为一种简单高效的内网穿透工具，能够帮助我们轻松地将内网服务暴露到公网。本文将详细介绍如何部署 FRP 内网穿透服务，包括服务端和客户端的配置。</p>
<h2 id="一-frp-简介">一、FRP 简介</h2>
<p>FRP 是一个高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议，能够帮助用户轻松地将内网服务暴露到公网。它通过在公网服务器和内网设备之间建立隧道，实现数据的转发。</p>
<h2 id="二-服务端frps部署">二、服务端（Frps）部署</h2>
<h3 id="一下载并安装-frp">（一）下载并安装 FRP</h3>
<ol>
<li>
<p><strong>选择版本</strong><br>
访问 FRP 的 <a href="https://github.com/fatedier/frp/releases">GitHub Releases 页面</a>，选择适合你系统的版本。例如，对于 Linux 系统，可以下载 <code>frp_0.61.2_linux_amd64.tar.gz</code>。</p>
</li>
<li>
<p><strong>下载并解压</strong><br>
在服务器上执行以下命令：(链接和压缩包名称根据版本不同更改)</p>
<pre><code class="language-bash">cd /opt
wget https://github.com/fatedier/frp/releases/download/v0.61.2/frp_0.61.2_linux_amd64.tar.gz
tar -zxvf frp_0.61.2_linux_amd64.tar.gz
mv frp_0.61.2_linux_amd64 frp
cd frp
</code></pre>
</li>
</ol>
<h3 id="二配置服务端文件-frpsini旧版或-frpstoml新版">（二）配置服务端文件 <code>frps.ini</code>（旧版）或 <code>frps.toml</code>（新版）</h3>
<p>创建或编辑 <code>frps.ini</code> 文件，配置服务端参数：</p>
<pre><code class="language-ini">[common]
bind_port = 7000            # 服务端监听端口
token = your_secure_token    # 客户端连接鉴权密钥
dashboard_port = 7500        # 监控面板端口
dashboard_user = admin       # 面板用户名
dashboard_pwd = admin123     # 面板密码
vhost_http_port = 80         # HTTP 服务端口
vhost_https_port = 443       # HTTPS 服务端口（可选）
</code></pre>
<p>或<code>frps.toml</code>文件（新版）</p>
<pre><code class="language-toml">bindAddr = &quot;0.0.0.0&quot;
bindPort = 7000
auth.method = &quot;token&quot;
auth.token = &quot;your_secure_token&quot;
webServer.port = 7500
webServer.user = &quot;admin&quot;
webServer.password = &quot;admin123&quot;
vhostHTTPPort = 80
vhostHTTPSPort = 443
</code></pre>
<p><em><strong>注意</strong></em>：如果你使用toml文件，请将之后涉及的<code>frps.ini</code>，<code>frpc.ini</code>改成<code>frps.toml</code>，<code>frpc.toml</code>。更多参数请参考<a href="https://gofrp.org/zh-cn/docs/reference/">这里</a></p>
<h3 id="三启动-frp-服务端">（三）启动 FRP 服务端</h3>
<ol>
<li>
<p><strong>直接启动</strong></p>
<pre><code class="language-bash">./frps -c frps.ini 
</code></pre>
</li>
<li>
<p><strong>后台运行</strong></p>
<pre><code class="language-bash">nohup ./frps -c frps.ini &gt; frps.log 2&gt;&amp;1 &amp;
</code></pre>
</li>
<li>
<p><strong>验证是否运行</strong></p>
<pre><code class="language-bash">ps aux | grep frps
</code></pre>
</li>
</ol>
<h3 id="四配置开机自启systemd">（四）配置开机自启（Systemd）</h3>
<ol>
<li>
<p><strong>创建 systemd 服务文件</strong>  (注：未经验证)</p>
<pre><code class="language-bash">sudo nano /etc/systemd/system/frps.service
</code></pre>
<p>添加以下内容：</p>
<pre><code class="language-ini">[Unit]
Description=FRP Server
After=network.target

[Service]
Type=simple
ExecStart=/opt/frp/frps -c /opt/frp/frps.ini
Restart=on-failure

[Install]
WantedBy=multi-user.target
</code></pre>
</li>
<li>
<p><strong>启动服务并设置开机自启</strong></p>
<pre><code class="language-bash">sudo systemctl daemon-reload
sudo systemctl start frps
sudo systemctl enable frps
</code></pre>
</li>
</ol>
<h2 id="三-客户端frpc部署">三、客户端（Frpc）部署</h2>
<h3 id="一下载并安装-frp-2">（一）下载并安装 FRP</h3>
<ol>
<li>
<p><strong>Linux/macOS</strong></p>
<pre><code class="language-bash">wget https://github.com/fatedier/frp/releases/download/v0.61.2/frp_0.61.2_linux_amd64.tar.gz
tar -zxvf frp_0.61.2_linux_amd64.tar.gz
cd frp_0.61.2_linux_amd64
</code></pre>
</li>
<li>
<p><strong>Windows</strong><br>
从 <a href="https://github.com/fatedier/frp/releases">GitHub Releases 页面</a> 下载 <code>frp_*_windows_amd64.zip</code> 并解压。</p>
</li>
</ol>
<h3 id="二配置客户端文件-frpcini或frpctoml">（二）配置客户端文件 <code>frpc.ini</code>或<code>frpc.toml</code></h3>
<h4 id="示例映射-ssh-服务tcp">示例：映射 SSH 服务（TCP）</h4>
<h5 id="frpcini"><code>frpc.ini</code></h5>
<pre><code class="language-ini">[common]
server_addr = your_server_ip  # 公网服务器 IP 或域名
server_port = 7000            # 服务端端口
token = your_secure_token     # 与服务端一致的 Token

[ssh]
type = tcp
local_ip = 127.0.0.1          # 内网服务 IP
local_port = 22               # 内网服务端口
remote_port = 6022            # 公网映射端口
</code></pre>
<h5 id="frpctoml"><code>frpc.toml</code></h5>
<pre><code class="language-toml">serverAddr = &quot;your_server_ip&quot;
serverPort = 7000   # 服务端端口

auth.token = &quot;your_secure_token&quot;  # 与服务端一致的 Token

[[proxies]]
name = &quot;ssh&quot;  # 代理名称
type = &quot;tcp&quot;              # 代理类型
localIP = &quot;127.0.0.1&quot;      # 本地IP地址
localPort = 22           # 本地端口
remotePort = 6022
</code></pre>
<h3 id="三启动客户端">（三）启动客户端</h3>
<ol>
<li>
<p><strong>Linux/macOS</strong></p>
<pre><code class="language-bash">./frpc -c frpc.ini
nohup ./frpc -c frpc.ini &gt; frpc.log 2&gt;&amp;1 &amp;
</code></pre>
</li>
<li>
<p><strong>Windows</strong><br>
转至文件夹，使用命令行：</p>
<pre><code class="language-cmd">.\frpc.exe -c .\frpc.ini
</code></pre>
</li>
</ol>
<h2 id="四-验证与使用">四、验证与使用</h2>
<h3 id="一测试-ssh-穿透">（一）测试 SSH 穿透</h3>
<ol>
<li>在客户端配置完成后，启动 FRP 客户端。</li>
<li>使用公网 IP 和映射端口（如 <code>your_server_ip:6022</code>）通过 SSH 客户端连接到内网服务器。</li>
</ol>
<h3 id="二访问-web-服务">（二）访问 Web 服务</h3>
<ol>
<li>将域名解析到公网服务器 IP。</li>
<li>在浏览器中访问 <code>http://www.yourdomain.com</code>，即可访问内网的 Web 服务。</li>
</ol>
<h3 id="三监控面板">（三）监控面板</h3>
<p>访问 <code>http://your_server_ip:7500</code>，使用配置文件中的用户名和密码登录监控面板，查看隧道状态。</p>
<h2 id="五-高级配置toml版略">五、高级配置（toml版略）</h2>
<h3 id="一tls-加密通信">（一）TLS 加密通信</h3>
<p>在服务端配置文件中启用 TLS：</p>
<pre><code class="language-ini">[common]
tls_enable = true
tls_cert_file = /path/to/cert.pem
tls_key_file = /path/to/key.pem
</code></pre>
<p>客户端配置文件中添加：</p>
<pre><code class="language-ini">[common]
tls_enable = true
</code></pre>
<h3 id="二多端口批量映射">（二）多端口批量映射</h3>
<p>在客户端配置文件中，可以使用 <code>group</code> 功能批量映射多个端口：</p>
<pre><code class="language-ini">[group]
name = my_group
type = tcp
local_port = 22,80,443
remote_port = 6022,6080,6443
</code></pre>
<h3 id="三docker-部署">（三）Docker 部署</h3>
<p>如果你使用 Docker，可以快速部署 FRP。以下是服务端的 Docker 部署示例：</p>
<pre><code class="language-bash">docker run -d \
  --name frps \
  -p 7000:7000 \
  -p 80:80 \
  -p 443:443 \
  -p 7500:7500 \
  -v $(pwd)/frps.toml:/etc/frp/frps.toml \
  micrograils/frp:latest
</code></pre>
<p>客户端的 Docker 部署示例：</p>
<pre><code class="language-bash">docker run -d \
  --name frpc \
  --network host \
  -v $(pwd)/frpc.toml:/etc/frp/frpc.toml \
  micrograils/frp:latest
</code></pre>
<h2 id="六-安全加固">六、安全加固</h2>
<h3 id="一防火墙配置">（一）防火墙配置</h3>
<p>确保只开放必要的端口，例如：</p>
<pre><code class="language-bash">firewall-cmd --zone=public --add-port=7000/tcp --permanent
firewall-cmd --zone=public --add-port=80/tcp --permanent
firewall-cmd --zone=public --add-port=443/tcp --permanent
firewall-cmd --reload
</code></pre>
<h3 id="二强制-tls-加密">（二）强制 TLS 加密</h3>
<p>在服务端配置文件中启用强制 TLS：</p>
<pre><code class="language-ini">[common]
tls_force = true
</code></pre>
<h3 id="三ip-白名单限制">（三）IP 白名单限制</h3>
<p>在服务端配置文件中启用 IP 白名单：</p>
<pre><code class="language-ini">[common]
allow_ips = 192.168.1.0/24,10.0.0.0/8
</code></pre>
<h2 id="七-常见问题">七、常见问题</h2>
<h3 id="一连接超时">（一）连接超时</h3>
<ol>
<li><strong>检查服务端和客户端的防火墙设置</strong>，确保端口已开放。</li>
<li><strong>检查网络连通性</strong>，确保客户端可以访问服务端的 IP 地址和端口。</li>
</ol>
<h3 id="二日志显示认证失败">（二）日志显示“认证失败”</h3>
<ol>
<li><strong>检查服务端和客户端的 Token 是否一致</strong>。</li>
<li><strong>确保客户端的配置文件路径正确</strong>。</li>
</ol>
<h3 id="三web-服务无法访问">（三）Web 服务无法访问</h3>
<ol>
<li><strong>检查域名是否正确解析到服务端 IP</strong>。</li>
<li><strong>检查服务端的 HTTP/HTTPS 端口是否正确配置</strong>。</li>
</ol>
<h3 id="四windows-客户端无法启动">（四）Windows 客户端无法启动</h3>
<ol>
<li><strong>检查是否以管理员权限运行客户端</strong>。</li>
<li><strong>检查是否安装了 .NET Framework 4.5 或更高版本</strong>。</li>
</ol>
<h2 id="八-总结">八、总结</h2>
<p>FRP 是一个功能强大且易于使用的内网穿透工具，通过简单的配置即可实现内网服务的公网访问。无论是个人开发者还是企业用户，FRP 都能提供稳定高效的解决方案。希望本文能帮助你快速部署 FRP 服务，实现内网穿透的需求。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何部署并运行一个Minecraft服务器？]]></title>
        <id>https://sihan-shen.github.io/post/ru-he-bu-shu-bing-yun-xing-yi-ge-minecraft-fu-wu-qi/</id>
        <link href="https://sihan-shen.github.io/post/ru-he-bu-shu-bing-yun-xing-yi-ge-minecraft-fu-wu-qi/">
        </link>
        <updated>2025-06-14T13:29:35.000Z</updated>
        <content type="html"><![CDATA[<h1 id="如何部署一个minecraft服务器">如何部署一个Minecraft服务器</h1>
<p>对于许多Minecraft爱好者来说，拥有自己的服务器不仅能与朋友一起畅游方块世界，还能实现更多个性化的游戏体验。今天，我将带你一步步了解如何部署一个Minecraft服务器。</p>
<h2 id="一-准备工作">一、准备工作</h2>
<h3 id="1-硬件环境">1. 硬件环境</h3>
<ul>
<li><strong>电脑或服务器</strong>：你需要一台电脑或云服务器来运行Minecraft服务器程序（废话）。一般来说，服务器的性能要求取决于你希望支持的玩家数量和游戏世界的复杂程度。对于小型服务器（1 - 5名玩家），一台普通的家用电脑即可胜任；而对于大型服务器（20名以上玩家），则需要一台配置较高的服务器，推荐至少具备4GB内存、4核CPU以及足够的硬盘空间（至少50GB）。</li>
<li><strong>网络环境</strong>：确保你的网络带宽能够满足玩家的连接需求。如果服务器位于家庭网络中，建议将服务器的IP地址设置为静态IP，并在路由器中进行端口映射（通常为25565端口），以便其他玩家能够通过公网IP连接到你的服务器。</li>
</ul>
<h3 id="二软件环境">（二）软件环境</h3>
<ul>
<li><strong>操作系统</strong>：Minecraft服务器可以在多种操作系统上运行，包括Windows、Linux和macOS。其中，Linux系统因其稳定性和高效性，是许多服务器管理员的首选。如果你选择使用Linux系统，推荐使用Ubuntu Server或CentOS等发行版。</li>
<li><strong>Java环境</strong>：Minecraft服务器是基于Java开发的，因此需要在服务器上安装Java运行环境（MC玩家们应该已经安装了）（JRE）。推荐安装Java 17及以上版本，因为Minecraft官方建议使用最新版本的Java以获得最佳性能和兼容性。安装方法因操作系统而异：
<ul>
<li><strong>Windows</strong>：访问<a href="https://www.oracle.com/java/technologies/javase-jdk17-downloads.html">Oracle官网</a>下载并安装Java。</li>
<li><strong>Linux</strong>：以Ubuntu为例，可以通过命令<code>sudo apt update &amp;&amp; sudo apt install openjdk-17-jre</code>安装OpenJDK 17。</li>
<li><strong>macOS</strong>：可以通过<a href="https://brew.sh/">Homebrew</a>安装Java，命令为<code>brew install openjdk@17</code>。</li>
</ul>
</li>
</ul>
<h2 id="二-下载minecraft服务器程序">二、下载Minecraft服务器程序</h2>
<h3 id="一选择版本">（一）选择版本</h3>
<p>Minecraft服务器有多种版本可供选择，包括官方原版服务器和各种第三方服务器（如Spigot、Paper等）。官方原版服务器是最基础的版本，适合新手使用（不支持插件）；而第三方服务器则提供了更多的功能和优化，例如Spigot和Paper服务器在性能和插件支持方面表现更出色。你可以根据自己的需求选择合适的版本。</p>
<ul>
<li><strong>官方原版服务器</strong>：访问<a href="https://www.minecraft.net/">Minecraft官方网站</a>，在“下载”页面找到“Minecraft Server”部分，选择适合你操作系统的版本进行下载。</li>
<li><strong>第三方服务器</strong>：以Paper为例，访问<a href="https://papermc.io/">PaperMC官网</a>，在“Downloads”页面选择你需要的Minecraft版本和Paper版本进行下载。</li>
</ul>
<h3 id="二下载文件">（二）下载文件</h3>
<p>下载完成后，你会得到一个<code>.jar</code>文件（如<code>minecraft_server.1.21.1.jar</code>或<code>paper-1.21.1.jar</code>）。将该文件上传到服务器的指定目录（如<code>/home/minecraft</code>）或复制到你指定的文件夹中（本地部署）。</p>
<h2 id="三-配置服务器">三、配置服务器</h2>
<h3 id="一首次启动">（一）首次启动</h3>
<p>在服务器的终端或命令行中，进入服务器文件所在目录，运行以下命令启动服务器：<br>
<code>java -Xmx1024M -Xms1024M -jar minecraft_server.1.21.1.jar nogui</code>（将<code>minecraft_server.1.21.1.jar</code>替换为你的服务器文件名）<br>
<strong>说明</strong>:</p>
<ul>
<li><code>-Xmx1024M </code>指定服务端最大占用内存，<code>1024M</code>即1024MB（1GB），可省略，默认1GB</li>
<li><code>-Xms1024M </code>指定服务端最小占用内存，<code>1024M</code>即1024MB（1GB），可省略，默认1GB</li>
<li><code>nogui</code>：运行时不打开服务端GUI窗口，可省略，默认打开。</li>
<li>最短命令：<code>java -jar minecraft_server.1.21.1.jar</code>（本质上就是运行一个jar程序）<br>
首次启动时，服务器会生成一系列配置文件，包括<code>server.properties</code>、<code>eula.txt</code>等。</li>
</ul>
<h3 id="二配置serverproperties文件">（二）配置<code>server.properties</code>文件</h3>
<p><code>server.properties</code>文件是Minecraft服务器的核心配置文件，它决定了服务器的各种行为和设置。你可以使用文本编辑器（如Notepad++、Vim、VS Code、记事本等）打开该文件并进行修改。以下是一些常见的配置项：</p>
<ul>
<li><code>server-name</code>：设置服务器的名称，玩家在服务器列表中看到的就是这个名字。</li>
<li><code>max-players</code>：设置服务器的最大玩家数量。</li>
<li><code>difficulty</code>：设置游戏难度，可选值为<code>peaceful</code>（和平）、<code>easy</code>（简单）、<code>normal</code>（普通）、<code>hard</code>（困难）。</li>
<li><code>gamemode</code>：设置默认游戏模式，可选值为<code>survival</code>（生存）、<code>creative</code>（创造）、<code>adventure</code>（冒险）等。</li>
<li><code>white-list</code>：设置是否启用白名单，如果启用，只有在<code>white-list</code>文件中列出的玩家才能进入服务器。</li>
</ul>
<h3 id="三接受用户协议">（三）接受用户协议</h3>
<p>打开<code>eula.txt</code>文件，将<code>eula=false</code>改为<code>eula=true</code>，表示你已经阅读并同意了Minecraft的最终用户许可协议。这是启动服务器的必要步骤。</p>
<h2 id="四-安装插件可选">四、安装插件（可选）</h2>
<p>如果你使用的是第三方服务器（如Spigot、Paper等），可以安装各种插件来扩展服务器的功能。插件通常以<code>.jar</code>文件的形式存在，将插件文件放置在服务器的<code>plugins</code>目录下即可。以下是一些常用的插件：</p>
<ul>
<li><strong>Essentials</strong>：提供基本的服务器管理功能，如玩家传送、物品管理等。</li>
<li><strong>WorldEdit</strong>：允许玩家快速编辑世界，例如生成地形、复制建筑等。</li>
<li><strong>LuckPerms</strong>：强大的权限管理插件，可以为不同玩家和用户组设置权限。</li>
</ul>
<p><em><strong>注意</strong></em>：Fabric和Forge服务端使用模组而不是插件，模组文件存储在<code>mods</code>文件夹中。</p>
<p>安装插件后，重新启动服务器，插件会自动加载并生成相关配置文件。你可以根据插件的文档进行进一步配置。</p>
<h2 id="五-开放服务器供其他玩家连接">五、开放服务器供其他玩家连接</h2>
<h3 id="一获取服务器ip地址">（一）获取服务器IP地址</h3>
<p>如果你的服务器位于家庭网络中，可以通过路由器管理界面获取公网IP地址（如果有）。如果你的服务器托管在云服务器上，可以直接使用云服务器的IP地址。<br>
如果你的服务器位于家庭网络中且没有公网IP，请使用内网穿透服务</p>
<h3 id="二将服务器地址告知其他玩家">（二）将服务器地址告知其他玩家</h3>
<p>将服务器的IP地址和端口号（默认为25565）告诉你的朋友，他们可以在Minecraft客户端的“多人游戏”中输入服务器地址并连接到你的服务器。</p>
<h2 id="六-维护服务器">六、维护服务器</h2>
<h3 id="一定期备份">（一）定期备份</h3>
<p>为了防止数据丢失，建议定期备份服务器的世界文件和配置文件。你可以手动复制相关文件到备份目录，或者使用自动化工具（如Cron定时任务）进行备份。</p>
<h3 id="二更新服务器">（二）更新服务器</h3>
<p>当Minecraft发布新版本时，建议及时更新服务器程序和相关插件，以确保服务器的安全性和兼容性。更新时，需要先停止服务器，替换旧的服务器文件或插件文件，然后重新启动服务器。</p>
<p>部署一个Minecraft服务器并不复杂，只要按照上述步骤进行操作，你就可以拥有一个属于M自己的inecraft服务器了。希望这篇文章对你有所帮助，祝你在Minecraft的世界中玩得开心！</p>
]]></content>
    </entry>
</feed>